<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>alpine使用的避坑指南</title>
      <link href="/blogs.github.io/2020/08/18/alpine-shi-yong-de-bi-keng-zhi-nan/"/>
      <url>/blogs.github.io/2020/08/18/alpine-shi-yong-de-bi-keng-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h1 id="alpine使用的避坑指南"><a href="#alpine使用的避坑指南" class="headerlink" title="alpine使用的避坑指南"></a>alpine使用的避坑指南</h1><p>alpine，是一个重量仅为5 MB的最小Linux发行版。它还有基本的linux工具和一个不错的包管理器APK。APK非常稳定，有相当数量的包。由于体积小，在容器中很受欢迎，但是使用上坑也很多，大部分可能是我们的无知吧。</p><h2 id="坑1-：-下载慢"><a href="#坑1-：-下载慢" class="headerlink" title="坑1 ： 下载慢"></a>坑1 ： 下载慢</h2><p>解决：</p><pre><code>echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/main" &gt; /etc/apk/repositories \&amp;&amp; echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/community" &gt;&gt; /etc/apk/repositories \&amp;&amp; echo "https://mirror.tuna.tsinghua.edu.cn/alpine/edge/testing" &gt;&gt; /etc/apk/repositories</code></pre><h2 id="坑2：-找不到包"><a href="#坑2：-找不到包" class="headerlink" title="坑2： 找不到包"></a>坑2： 找不到包</h2><p>解决： 搜索 <a href="https://pkgs.alpinelinux.org/packages">https://pkgs.alpinelinux.org/packages</a> ，加入指定的“Branch”和“Repository”的源到/etc/apk/repositories，就可以apk add</p><h2 id="坑3：-安装失败"><a href="#坑3：-安装失败" class="headerlink" title="坑3： 安装失败"></a>坑3： 安装失败</h2><pre><code>ERROR: https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/community: Bad file descriptorWARNING: Ignoring APKINDEX.79f426e4.tar.gz: Bad file descriptorERROR: unsatisfiable constraints:  openssh (missing):    required by: world[openssh]</code></pre><p>解决：</p><pre><code>apk add  openssh --no-cache #加--no-cache, 另外，还能减少镜像体积</code></pre><h2 id="坑4：镜像体积大，想删除不再使用的包"><a href="#坑4：镜像体积大，想删除不再使用的包" class="headerlink" title="坑4：镜像体积大，想删除不再使用的包"></a>坑4：镜像体积大，想删除不再使用的包</h2><p>apk add 加 -t 参数 </p><p>-t, –virtual NAME Instead of adding all the packages to ‘world’, create a new virtual package with the listed dependencies and add that to ‘world’; the<br>actions of the command are easily reverted by deleting the virtual package<br>这意味着当您安装软件包时，这些软件包不会添加到全局软件包中。这种变化可以很容易地回滚/删除。所以，如果我需要gcc来编译程序，但是一旦程序被编译，我就不再需要gcc了。</p><p>我可以在虚拟包中安装gcc和其他必需的包，并且可以删除所有依赖项，并删除此虚拟包名称。以下是示例用法</p><p>apk add –virtual mypacks gcc vim<br>apk del mypacks<br>使用第一个命令安装的所有18个软件包将被下一个命令删除。</p><p>注意：同一个-t参数会覆盖之前的所有安装包，所有对动态链接库最好不使用-t ,或者保证此参数不重复。</p><h2 id="坑5：时间不同步"><a href="#坑5：时间不同步" class="headerlink" title="坑5：时间不同步"></a>坑5：时间不同步</h2><pre><code>echo "Asia/Shanghai" &gt; /etc/timezoneapk add –no-cache tzdataTZ=Asia/Shanghailn -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><h2 id="坑6：用户（组）和宿主机不兼容"><a href="#坑6：用户（组）和宿主机不兼容" class="headerlink" title="坑6：用户（组）和宿主机不兼容"></a>坑6：用户（组）和宿主机不兼容</h2><p>解决：</p><pre><code>addgroup -g 1200 -S www \     &amp;&amp; adduser -u 1200 -D -S -G www www</code></pre><h2 id="坑7：不兼容glibc"><a href="#坑7：不兼容glibc" class="headerlink" title="坑7：不兼容glibc"></a>坑7：不兼容glibc</h2><p>解决：<br>使用最新稳定版本的alpine,</p><pre><code>#再安装编译环境apk add --virtual .build-base --no-cache \autoconf \automake \g++ \make \linux-headers \bsd-compat-headers</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blogs.github.io/2020/08/18/hello-world/"/>
      <url>/blogs.github.io/2020/08/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
